#include <iostream>
#include <vector>
#include <cstdlib> 
#include <ctime> 
#include <chrono>

using namespace std;

void quickSort(int*arr, int left, int right) {
    int i = left, j = right;
    int pivot = arr[(left + right) / 2];

    // Partition
    while (i <= j) {
        while (arr[i] < pivot) {
            i++;
        }

        while (arr[j] > pivot) {
            j--;
        }

        if (i <= j) {
            swap(arr[i], arr[j]);
            i++;
            j--;
        }
    }

    if (left < j) {
        quickSort(arr, left, j);
    }

    if (i < right) {
        quickSort(arr, i, right);
    }
}

int main() {
    srand(time(NULL));  
    int arr[50000];

    for(int i=0; i<50000; i++){
        arr[i]=rand()%100+1; 
    }
    
    auto started = std::chrono::high_resolution_clock::now();
    
    quickSort(arr, 0, 49999);

    auto done = std::chrono::high_resolution_clock::now();

    std::cout << std::chrono::duration_cast<std::chrono::milliseconds>(done-started).count();

    return 0;
}
